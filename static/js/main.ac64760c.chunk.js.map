{"version":3,"sources":["CodingLanguagePacks/javaDarkTheme.js","scripts/makeCodeAreaPretty.js","ReactComponents/CodeArea.js","App.js","index.js"],"names":["javaDarkTheme","abstractKeyWord","classKeyWord","constKeyWord","enumKeyWord","extendsKeyWord","falseKeyWord","finalKeyWord","gotoKeyWord","implementsKeyWord","importKeyWord","instanceofKeyWord","interfaceKeyWord","nativeKeyWord","nullKeyWord","packageKeyWord","privateKeyWord","protectedKeyWord","publicKeyWord","staticKeyWord","strictfpKeyWord","superKeyWord","synchronizedKeyWord","thisKeyWord","throwsKeyWord","transientKeyWord","trueKeyWord","volatileKeyWord","assertKeyWord","breakKeyWord","caseKeyWord","catchKeyWord","continueKeyWord","defaultKeyWord","doKeyWord","elseKeyWord","finallyKeyWord","forKeyWord","ifKeyWord","newKeyWord","returnKeyWord","switchKeyWord","throwKeyWord","tryKeyWord","voidKeyWord","whileKeyWord","booleanKeyWord","byteKeyWord","charKeyWord","doubleKeyWord","floatKeyWord","intKeyWord","longKeyWord","shortKeyWord","$","window","updateColors","eventTarget","currentHTML","currentWord","text","html","i","length","charAt","trim","substring","moveCursorToNewPosition","selection","cursorIndex","modify","makeCodeAreaPretty","event","keyCode","target","getSelection","range","getRangeAt","nodeCtr","charCtr","selectionNode","anchorNode","parentNode","nodeName","currentNode","childNodes","undefined","textContent","startOffset","getCursorIndex","preventDefault","newLine","startContainer","wholeText","CodeArea","useState","className","contentEditable","wrap","tab-size","spellCheck","onKeyDown","App","style","textAlign","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac64760c.chunk.js","sourcesContent":["let javaDarkTheme = {\r\n    //Blue: #569cd6\r\n    abstractKeyWord: \"#569cd6\",\r\n    classKeyWord: \"#569cd6\",\r\n    constKeyWord: \"#569cd6\",\r\n    enumKeyWord: \"#569cd6\",\r\n    extendsKeyWord: \"#569cd6\",\r\n    falseKeyWord: \"#569cd6\",\r\n    finalKeyWord: \"#569cd6\",\r\n    gotoKeyWord: \"#569cd6\",\r\n    implementsKeyWord: \"#569cd6\",\r\n    importKeyWord: \"#569cd6\",\r\n    instanceofKeyWord: \"#569cd6\",\r\n    interfaceKeyWord: \"#569cd6\",\r\n    nativeKeyWord: \"#569cd6\",\r\n    nullKeyWord: \"#569cd6\",\r\n    packageKeyWord: \"#569cd6\",\r\n    privateKeyWord: \"#569cd6\",\r\n    protectedKeyWord: \"#569cd6\",\r\n    publicKeyWord: \"#569cd6\",\r\n    staticKeyWord: \"#569cd6\",\r\n    strictfpKeyWord: \"#569cd6\",\r\n    superKeyWord: \"#569cd6\",\r\n    synchronizedKeyWord: \"#569cd6\",\r\n    thisKeyWord: \"#569cd6\",\r\n    throwsKeyWord: \"#569cd6\",\r\n    transientKeyWord: \"#569cd6\",\r\n    trueKeyWord: \"#569cd6\",\r\n    volatileKeyWord: \"#569cd6\",\r\n\r\n    //Purple: #c586c0\r\n    assertKeyWord: \"#c586c0\",\r\n    breakKeyWord: \"#c586c0\",\r\n    caseKeyWord: \"#c586c0\",\r\n    catchKeyWord: \"#c586c0\",\r\n    continueKeyWord: \"#c586c0\",\r\n    defaultKeyWord: \"#c586c0\",\r\n    doKeyWord: \"#c586c0\",\r\n    elseKeyWord: \"#c586c0\",\r\n    finallyKeyWord: \"#c586c0\",\r\n    forKeyWord: \"#c586c0\",\r\n    ifKeyWord: \"#c586c0\",\r\n    newKeyWord: \"#c586c0\",\r\n    returnKeyWord: \"#c586c0\",\r\n    switchKeyWord: \"#c586c0\",\r\n    throwKeyWord: \"#c586c0\",\r\n    tryKeyWord: \"#c586c0\",\r\n    voidKeyWord: \"#c586c0\",\r\n    whileKeyWord: \"#c586c0\",\r\n\r\n    //Aqua: #4ec9b0\r\n    booleanKeyWord: \"#4ec9b0\",\r\n    byteKeyWord: \"#4ec9b0\",\r\n    charKeyWord: \"#4ec9b0\",\r\n    doubleKeyWord: \"#4ec9b0\",\r\n    floatKeyWord: \"#4ec9b0\",\r\n    intKeyWord: \"#4ec9b0\",\r\n    longKeyWord: \"#4ec9b0\",\r\n    shortKeyWord: \"#4ec9b0\",\r\n}\r\n\r\nexport default javaDarkTheme;","import javaDarkTheme from \"../CodingLanguagePacks/javaDarkTheme.js\";\r\nconst $ = window.$;\r\n\r\n//TODO:\r\n    //Update the backspace & delete key to check for a tab-sized sequence of spaces?\r\n        //only if numSpaces%tabsize==0, otherwise delete a single space\r\n    //Tab size should be determined from the toolbar selection\r\n    //Parentheses and brackets\r\n        //ghost brackets that fully appear when you hit enter?\r\n        //Go down an extra line and auto-tab to the same spot as the previous line\r\n\r\n//BUGS:\r\n\r\n    //colors don't update when brackets are touching the keywords\r\n        //Ex: if() else{}\r\n\r\n    //When pasting content, it should paste without formatting, then update the colors\r\n        //formatting meaning font-type, font-size, boldness, background-color, etc. \r\n            //keep the spaces and tabs and stuff\r\n                //do I need to convert tabs to spaces??\r\n                    // and update them to the corresponding tab-size selected?\r\n\r\n    //Angle brackets treated as HTML\r\n\r\n//NICE TO DO: \r\n    //Change updateColors to run every keydown and click event?\r\n        //Right now if I type a full keyword, it only updates when I hit space, tab, or enter. Would be nice if it updated when I moved arrow keys, or more generally updated the cursor position\r\n\r\n\r\nfunction makeCodeAreaPretty(event) {\r\n    let keyCode = event.keyCode;\r\n    let eventTarget = $(event.target);\r\n    let selection = window.getSelection();\r\n    let range = selection.getRangeAt(0);\r\n    let cursorIndex = getCursorIndex(event.target, selection);\r\n\r\n    //Space key pressed\r\n    if(keyCode === 32) {\r\n        event.preventDefault();\r\n        \r\n        let space = \" \";\r\n\r\n        eventTarget.html(\r\n            eventTarget.text().substring(0, cursorIndex) + //All text up until the cursor\r\n            space +\r\n            eventTarget.text().substring(cursorIndex) //All text after the cursor\r\n        );\r\n        updateColors(eventTarget);\r\n        moveCursorToNewPosition(selection, cursorIndex + 1);\r\n    }    \r\n    //Tab key pressed\r\n    else if(keyCode === 9) {\r\n        event.preventDefault();\r\n        \r\n        let tab = \"    \"; //BUILD THIS FROM THE TAB SIZE SELECTED\r\n\r\n        eventTarget.html(\r\n            eventTarget.text().substring(0, cursorIndex) + //All text up until the cursor\r\n            tab +\r\n            eventTarget.text().substring(cursorIndex) //All text after the cursor\r\n        );\r\n\r\n        updateColors(eventTarget);\r\n        moveCursorToNewPosition(selection, cursorIndex + tab.length);\r\n    }\r\n    //Enter key pressed\r\n    else if(keyCode === 13) {\r\n        \r\n        if(eventTarget.text().length > 0) {\r\n            event.preventDefault();\r\n\r\n            let newLine = range.startOffset >= range.startContainer.wholeText.length ? \"\\n\\r\": \"\\n\"; //If cursor is at the end of the line, add carriage return\r\n\r\n            eventTarget.html(\r\n                eventTarget.text().substring(0, cursorIndex) + //All text up until the cursor\r\n                newLine + \r\n                eventTarget.text().substring(cursorIndex) //All text after the cursor\r\n            );\r\n\r\n            updateColors(eventTarget);\r\n            moveCursorToNewPosition(selection, cursorIndex + 1);\r\n        }\r\n    } \r\n\r\n    //Backspace key pressed\r\n    else if(keyCode === 8) {\r\n\r\n    }\r\n    //Delete key pressed\r\n    else if(keyCode === 46) {\r\n\r\n    }\r\n    //Left arrow, up arrow, right arrow, down arrow, end key, home key, page up key, page down key\r\n    // else if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40 \r\n    //          || keyCode === 35 || keyCode === 36 || keyCode === 33 || keyCode === 34) {\r\n    //     updateColors(eventTarget);\r\n    // }\r\n}\r\n\r\nfunction updateColors(eventTarget) { \r\n    \r\n    let currentHTML = \"\", currentWord = \"\", text = eventTarget.html();\r\n\r\n    for(let i = 0; i < text.length; i++) {\r\n\r\n        currentHTML += text.charAt(i);\r\n\r\n        if((text.charAt(i) + \"\").trim() === \"\") { //USE REGEX INSTEAD?????????????????????????\r\n            //Check if currentWord is a keyword\r\n            if(javaDarkTheme[currentWord + \"KeyWord\"]) {\r\n\r\n                //Wrap in a <span> with its color \r\n                currentHTML = currentHTML.substring(0, currentHTML.length - currentWord.length - 1) + \r\n                              \"<span style='color: \" + javaDarkTheme[currentWord + \"KeyWord\"] + \"'>\" + currentWord + \"</span>\" +\r\n                              currentHTML.charAt(currentHTML.length-1);\r\n            }\r\n            currentWord = \"\";\r\n        }\r\n        else {\r\n            currentWord += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    eventTarget.html(currentHTML);\r\n}\r\n\r\nfunction getCursorIndex(eventTarget, selection) {\r\n\r\n    let nodeCtr = 0;\r\n    let charCtr = 0;\r\n    let selectionNode = selection.anchorNode.parentNode.nodeName === \"SPAN\" ? selection.anchorNode.parentNode : selection.anchorNode;\r\n    let currentNode = eventTarget.childNodes[0];\r\n\r\n    while(currentNode !== undefined && currentNode !== selectionNode) {\r\n        nodeCtr++;\r\n        charCtr += currentNode.textContent.length;\r\n        currentNode = eventTarget.childNodes[nodeCtr];\r\n    }\r\n\r\n    return charCtr + selection.getRangeAt(0).startOffset;\r\n}\r\n\r\n//Move the cursor caret to the new cursor index\r\nfunction moveCursorToNewPosition(selection, cursorIndex) {\r\n    for(let i = 0; i < cursorIndex; i++) {\r\n        selection.modify(\"move\", \"right\", \"character\");\r\n    }\r\n}\r\n\r\nexport default makeCodeAreaPretty;","import React, {useState} from \"react\";\r\nimport './CodeArea.css';\r\nimport makeCodeAreaPretty from \"../scripts/makeCodeAreaPretty.js\";\r\n\r\nfunction CodeArea() {\r\n    const [code] = useState(`\r\n                <div>import java.io.*;</div>\r\n                <div>public class MyClass {</div>\r\n                <div>public static void main(String args[]) throws Exception {</div>\r\n                <div>BufferedReader br = new BufferedReader(new InputStreamReader(System.in));</div>\r\n                <div>String s = br.readLine();</div>\r\n                <div>System.out.println(s);</div>\r\n                <div>}</div>\r\n            <div>}</div>\r\n        `);\r\n    return (\r\n        <div className=\"container\">\r\n            <code>\r\n                <pre \r\n                    contentEditable=\"true\" \r\n                    className=\"CodeArea-textarea\" \r\n                    wrap=\"off\" \r\n                    tab-size=\"4\"\r\n                    spellCheck=\"false\" \r\n                    onKeyDown={makeCodeAreaPretty}\r\n                >\r\n                </pre>\r\n            </code>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeArea;","import React from 'react';\nimport CodeArea from './ReactComponents/CodeArea.js';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<header>\n\t\t\t\t<h1 style={{textAlign: \"center\"}}>App Header</h1>\n\t\t\t</header>\n\t\t\t<div>\n\t\t\t\t<h1 style={{textAlign: \"center\"}}>App Body</h1>\n\n\t\t\t\t<h3>React Components to Build:</h3>\n\t\t\t\t<p style={{marginLeft: \"0px\"}}>Text</p>\n\t\t\t\t<p style={{marginLeft: \"20px\"}}>Code</p>\n\t\t\t\t<p style={{marginLeft: \"20px\"}}>Headings</p>\n\t\t\t\t<p style={{marginLeft: \"20px\"}}>Unordered Lists</p>\n\t\t\t\t<p style={{marginLeft: \"20px\"}}>Ordered Lists</p>\n\t\t\t\t<p style={{marginLeft: \"0px\"}}>Code Textarea</p>\n\t\t\t\t<CodeArea />\n\t\t\t\t<p style={{marginLeft: \"0px\"}}>Console</p>\n\t\t\t\t\n\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<h1 style={{textAlign: \"center\"}}>App Footer</h1>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));"],"sourceRoot":""}